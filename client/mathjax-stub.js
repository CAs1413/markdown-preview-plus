"use strict";
const mathJaxStub = {
    jaxConfigure(userMacros, renderer) {
        MathJax.Hub.Config({
            jax: ['input/TeX', `output/${renderer}`],
            extensions: [],
            TeX: {
                extensions: [
                    'AMSmath.js',
                    'AMSsymbols.js',
                    'noErrors.js',
                    'noUndefined.js',
                ],
                Macros: userMacros,
            },
            'HTML-CSS': {
                availableFonts: [],
                webFont: 'TeX',
            },
            messageStyle: 'none',
            showMathMenu: false,
            skipStartupTypeset: true,
        });
        MathJax.Hub.Configured();
    },
    async queueTypeset(domElements) {
        domElements.forEach((elem) => {
            MathJax.Hub.Queue(['Typeset', MathJax.Hub, elem]);
        });
        return new Promise((resolve) => {
            MathJax.Hub.Queue([resolve]);
        });
    },
};
window.mathJaxStub = mathJaxStub;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0aGpheC1zdHViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjLWNsaWVudC9tYXRoamF4LXN0dWIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sV0FBVyxHQUFHO0lBQ2xCLFlBQVksQ0FBQyxVQUFrQixFQUFFLFFBQXlCO1FBQ3hELE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO1lBQ2pCLEdBQUcsRUFBRSxDQUFDLFdBQVcsRUFBRSxVQUFVLFFBQVEsRUFBRSxDQUFDO1lBQ3hDLFVBQVUsRUFBRSxFQUFFO1lBQ2QsR0FBRyxFQUFFO2dCQUNILFVBQVUsRUFBRTtvQkFDVixZQUFZO29CQUNaLGVBQWU7b0JBQ2YsYUFBYTtvQkFDYixnQkFBZ0I7aUJBQ2pCO2dCQUNELE1BQU0sRUFBRSxVQUFVO2FBQ25CO1lBQ0QsVUFBVSxFQUFFO2dCQUNWLGNBQWMsRUFBRSxFQUFFO2dCQUNsQixPQUFPLEVBQUUsS0FBSzthQUNmO1lBQ0QsWUFBWSxFQUFFLE1BQU07WUFDcEIsWUFBWSxFQUFFLEtBQUs7WUFDbkIsa0JBQWtCLEVBQUUsSUFBSTtTQUN6QixDQUFDLENBQUE7UUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFBO0lBQzFCLENBQUM7SUFFRCxLQUFLLENBQUMsWUFBWSxDQUFDLFdBQW1CO1FBQ3BDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUMzQixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUE7UUFDbkQsQ0FBQyxDQUFDLENBQUE7UUFDRixNQUFNLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUM3QixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUE7UUFDOUIsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0NBQ0YsQ0FBQTtBQVVELE1BQU0sQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWF0aEpheFN0dWIgPSB7XG4gIGpheENvbmZpZ3VyZSh1c2VyTWFjcm9zOiBvYmplY3QsIHJlbmRlcmVyOiBNYXRoSmF4UmVuZGVyZXIpIHtcbiAgICBNYXRoSmF4Lkh1Yi5Db25maWcoe1xuICAgICAgamF4OiBbJ2lucHV0L1RlWCcsIGBvdXRwdXQvJHtyZW5kZXJlcn1gXSxcbiAgICAgIGV4dGVuc2lvbnM6IFtdLFxuICAgICAgVGVYOiB7XG4gICAgICAgIGV4dGVuc2lvbnM6IFtcbiAgICAgICAgICAnQU1TbWF0aC5qcycsXG4gICAgICAgICAgJ0FNU3N5bWJvbHMuanMnLFxuICAgICAgICAgICdub0Vycm9ycy5qcycsXG4gICAgICAgICAgJ25vVW5kZWZpbmVkLmpzJyxcbiAgICAgICAgXSxcbiAgICAgICAgTWFjcm9zOiB1c2VyTWFjcm9zLFxuICAgICAgfSxcbiAgICAgICdIVE1MLUNTUyc6IHtcbiAgICAgICAgYXZhaWxhYmxlRm9udHM6IFtdLFxuICAgICAgICB3ZWJGb250OiAnVGVYJyxcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlU3R5bGU6ICdub25lJyxcbiAgICAgIHNob3dNYXRoTWVudTogZmFsc2UsXG4gICAgICBza2lwU3RhcnR1cFR5cGVzZXQ6IHRydWUsXG4gICAgfSlcbiAgICBNYXRoSmF4Lkh1Yi5Db25maWd1cmVkKClcbiAgfSxcblxuICBhc3luYyBxdWV1ZVR5cGVzZXQoZG9tRWxlbWVudHM6IE5vZGVbXSkge1xuICAgIGRvbUVsZW1lbnRzLmZvckVhY2goKGVsZW0pID0+IHtcbiAgICAgIE1hdGhKYXguSHViLlF1ZXVlKFsnVHlwZXNldCcsIE1hdGhKYXguSHViLCBlbGVtXSlcbiAgICB9KVxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgTWF0aEpheC5IdWIuUXVldWUoW3Jlc29sdmVdKVxuICAgIH0pXG4gIH0sXG59XG5cbmludGVyZmFjZSBXaW5kb3cge1xuICBtYXRoSmF4U3R1YjogTWF0aEpheFN0dWJcbn1cblxudHlwZSBNYXRoSmF4UmVuZGVyZXIgPSAnU1ZHJyB8ICdIVE1MLUNTUydcblxudHlwZSBNYXRoSmF4U3R1YiA9IHR5cGVvZiBtYXRoSmF4U3R1YlxuXG53aW5kb3cubWF0aEpheFN0dWIgPSBtYXRoSmF4U3R1YlxuIl19