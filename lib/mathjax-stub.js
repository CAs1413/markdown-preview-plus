"use strict";
const mathJaxStub = {
    jaxConfigure(userMacros, renderer) {
        MathJax.Hub.Config({
            jax: ['input/TeX', `output/${renderer}`],
            extensions: [],
            TeX: {
                extensions: [
                    'AMSmath.js',
                    'AMSsymbols.js',
                    'noErrors.js',
                    'noUndefined.js',
                ],
                Macros: userMacros,
            },
            'HTML-CSS': {
                availableFonts: [],
                webFont: 'TeX',
            },
            messageStyle: 'none',
            showMathMenu: false,
            skipStartupTypeset: true,
        });
        MathJax.Hub.Configured();
    },
    queueTypeset(domElements) {
        domElements.forEach((elem) => {
            MathJax.Hub.Queue(['Typeset', MathJax.Hub, elem]);
        });
    },
    queueProcessHTMLString(element, callback) {
        MathJax.Hub.Queue(['setRenderer', MathJax.Hub, 'SVG'], ['Typeset', MathJax.Hub, element], ['setRenderer', MathJax.Hub, 'HTML-CSS'], [callback]);
    },
    async waitForQueue() {
        await new Promise((resolve) => {
            MathJax.Hub.Queue([resolve]);
        });
    },
};
window.mathJaxStub = mathJaxStub;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0aGpheC1zdHViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL21hdGhqYXgtc3R1Yi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsTUFBTSxXQUFXLEdBQUc7SUFDbEIsWUFBWSxDQUFDLFVBQWtCLEVBQUUsUUFBNEI7UUFDM0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUM7WUFDakIsR0FBRyxFQUFFLENBQUMsV0FBVyxFQUFFLFVBQVUsUUFBUSxFQUFFLENBQUM7WUFDeEMsVUFBVSxFQUFFLEVBQUU7WUFDZCxHQUFHLEVBQUU7Z0JBQ0gsVUFBVSxFQUFFO29CQUNWLFlBQVk7b0JBQ1osZUFBZTtvQkFDZixhQUFhO29CQUNiLGdCQUFnQjtpQkFDakI7Z0JBQ0QsTUFBTSxFQUFFLFVBQVU7YUFDbkI7WUFDRCxVQUFVLEVBQUU7Z0JBQ1YsY0FBYyxFQUFFLEVBQUU7Z0JBQ2xCLE9BQU8sRUFBRSxLQUFLO2FBQ2Y7WUFDRCxZQUFZLEVBQUUsTUFBTTtZQUNwQixZQUFZLEVBQUUsS0FBSztZQUNuQixrQkFBa0IsRUFBRSxJQUFJO1NBQ3pCLENBQUMsQ0FBQTtRQUNGLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUE7SUFDMUIsQ0FBQztJQUVELFlBQVksQ0FBQyxXQUFtQjtRQUM5QixXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO1FBQ25ELENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELHNCQUFzQixDQUFDLE9BQW9CLEVBQUUsUUFBb0I7UUFDL0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQ2YsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFDbkMsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsRUFDakMsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsRUFDeEMsQ0FBQyxRQUFRLENBQUMsQ0FDWCxDQUFBO0lBQ0gsQ0FBQztJQUVELEtBQUssQ0FBQyxZQUFZO1FBQ2hCLE1BQU0sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUE7UUFDOUIsQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0NBQ0YsQ0FBQTtBQVFELE1BQU0sQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWF0aEpheFN0dWIgPSB7XG4gIGpheENvbmZpZ3VyZSh1c2VyTWFjcm9zOiBvYmplY3QsIHJlbmRlcmVyOiAnSFRNTC1DU1MnIHwgJ1NWRycpIHtcbiAgICBNYXRoSmF4Lkh1Yi5Db25maWcoe1xuICAgICAgamF4OiBbJ2lucHV0L1RlWCcsIGBvdXRwdXQvJHtyZW5kZXJlcn1gXSxcbiAgICAgIGV4dGVuc2lvbnM6IFtdLFxuICAgICAgVGVYOiB7XG4gICAgICAgIGV4dGVuc2lvbnM6IFtcbiAgICAgICAgICAnQU1TbWF0aC5qcycsXG4gICAgICAgICAgJ0FNU3N5bWJvbHMuanMnLFxuICAgICAgICAgICdub0Vycm9ycy5qcycsXG4gICAgICAgICAgJ25vVW5kZWZpbmVkLmpzJyxcbiAgICAgICAgXSxcbiAgICAgICAgTWFjcm9zOiB1c2VyTWFjcm9zLFxuICAgICAgfSxcbiAgICAgICdIVE1MLUNTUyc6IHtcbiAgICAgICAgYXZhaWxhYmxlRm9udHM6IFtdLFxuICAgICAgICB3ZWJGb250OiAnVGVYJyxcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlU3R5bGU6ICdub25lJyxcbiAgICAgIHNob3dNYXRoTWVudTogZmFsc2UsXG4gICAgICBza2lwU3RhcnR1cFR5cGVzZXQ6IHRydWUsXG4gICAgfSlcbiAgICBNYXRoSmF4Lkh1Yi5Db25maWd1cmVkKClcbiAgfSxcblxuICBxdWV1ZVR5cGVzZXQoZG9tRWxlbWVudHM6IE5vZGVbXSkge1xuICAgIGRvbUVsZW1lbnRzLmZvckVhY2goKGVsZW0pID0+IHtcbiAgICAgIE1hdGhKYXguSHViLlF1ZXVlKFsnVHlwZXNldCcsIE1hdGhKYXguSHViLCBlbGVtXSlcbiAgICB9KVxuICB9LFxuXG4gIHF1ZXVlUHJvY2Vzc0hUTUxTdHJpbmcoZWxlbWVudDogSFRNTEVsZW1lbnQsIGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgTWF0aEpheC5IdWIuUXVldWUoXG4gICAgICBbJ3NldFJlbmRlcmVyJywgTWF0aEpheC5IdWIsICdTVkcnXSxcbiAgICAgIFsnVHlwZXNldCcsIE1hdGhKYXguSHViLCBlbGVtZW50XSxcbiAgICAgIFsnc2V0UmVuZGVyZXInLCBNYXRoSmF4Lkh1YiwgJ0hUTUwtQ1NTJ10sXG4gICAgICBbY2FsbGJhY2tdLFxuICAgIClcbiAgfSxcblxuICBhc3luYyB3YWl0Rm9yUXVldWUoKSB7XG4gICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIE1hdGhKYXguSHViLlF1ZXVlKFtyZXNvbHZlXSlcbiAgICB9KVxuICB9LFxufVxuXG5pbnRlcmZhY2UgV2luZG93IHtcbiAgbWF0aEpheFN0dWI6IE1hdGhKYXhTdHViXG59XG5cbnR5cGUgTWF0aEpheFN0dWIgPSB0eXBlb2YgbWF0aEpheFN0dWJcblxud2luZG93Lm1hdGhKYXhTdHViID0gbWF0aEpheFN0dWJcbiJdfQ==