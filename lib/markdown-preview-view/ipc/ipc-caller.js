"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const electron_1 = require("electron");
class IPCCaller {
    constructor(windowId, editorId) {
        this.windowId = windowId;
        this.editorId = editorId;
        this.ipcIdx = 0;
        this.myWindowId = electron_1.remote.getCurrentWindow().id;
    }
    async scrollToBufferRange(arg) {
        return this.ipc('scrollToBufferRange', arg);
    }
    async destroy() {
        return this.ipc('destroy', undefined);
    }
    async init() {
        return this.ipc('init', undefined);
    }
    async openSource(arg) {
        return this.ipc('openSource', arg);
    }
    dispose() {
    }
    async ipc(cmd, args) {
        return new Promise((resolve) => {
            const idx = this.ipcIdx++;
            const handler = (e) => {
                if (e.forWindowId === this.myWindowId &&
                    e.windowId === this.windowId &&
                    e.editorId === this.editorId &&
                    e.idx === idx) {
                    electron_1.remote.ipcMain.removeListener('markdown-preview-plus:editor-reply', handler);
                    resolve(e.reply);
                }
            };
            electron_1.remote.ipcMain.on('markdown-preview-plus:editor-reply', handler);
            electron_1.remote.ipcMain.emit('markdown-preview-plus:editor-request', {
                windowId: this.windowId,
                editorId: this.editorId,
                forWindowId: this.myWindowId,
                idx,
                cmd,
                args,
            });
        });
    }
}
exports.IPCCaller = IPCCaller;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXBjLWNhbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYXJrZG93bi1wcmV2aWV3LXZpZXcvaXBjL2lwYy1jYWxsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx1Q0FBaUM7QUFRakM7SUFHRSxZQUFvQixRQUFnQixFQUFVLFFBQWdCO1FBQTFDLGFBQVEsR0FBUixRQUFRLENBQVE7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFRO1FBRnRELFdBQU0sR0FBRyxDQUFDLENBQUE7UUFDVixlQUFVLEdBQUcsaUJBQU0sQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLEVBQUUsQ0FBQTtJQUNnQixDQUFDO0lBQzNELEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxHQUFxQjtRQUNwRCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUUsR0FBRyxDQUFDLENBQUE7SUFDN0MsQ0FBQztJQUNNLEtBQUssQ0FBQyxPQUFPO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUE7SUFDdkMsQ0FBQztJQUNNLEtBQUssQ0FBQyxJQUFJO1FBQ2YsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQTtJQUNwQyxDQUFDO0lBQ00sS0FBSyxDQUFDLFVBQVUsQ0FBQyxHQUFZO1FBQ2xDLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUFDLENBQUE7SUFDcEMsQ0FBQztJQUNNLE9BQU87SUFFZCxDQUFDO0lBQ08sS0FBSyxDQUFDLEdBQUcsQ0FDZixHQUFNLEVBQ04sSUFBb0I7UUFFcEIsT0FBTyxJQUFJLE9BQU8sQ0FBTSxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ2xDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQTtZQUN6QixNQUFNLE9BQU8sR0FBRyxDQUFDLENBTWhCLEVBQUUsRUFBRTtnQkFDSCxJQUNFLENBQUMsQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLFVBQVU7b0JBQ2pDLENBQUMsQ0FBQyxRQUFRLEtBQUssSUFBSSxDQUFDLFFBQVE7b0JBQzVCLENBQUMsQ0FBQyxRQUFRLEtBQUssSUFBSSxDQUFDLFFBQVE7b0JBQzVCLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxFQUNiO29CQUNBLGlCQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FDM0Isb0NBQW9DLEVBQ3BDLE9BQU8sQ0FDUixDQUFBO29CQUNELE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUE7aUJBQ2pCO1lBQ0gsQ0FBQyxDQUFBO1lBQ0QsaUJBQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLG9DQUFvQyxFQUFFLE9BQU8sQ0FBQyxDQUFBO1lBQ2hFLGlCQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxzQ0FBc0MsRUFBRTtnQkFDMUQsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO2dCQUN2QixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7Z0JBQ3ZCLFdBQVcsRUFBRSxJQUFJLENBQUMsVUFBVTtnQkFDNUIsR0FBRztnQkFDSCxHQUFHO2dCQUNILElBQUk7YUFDTCxDQUFDLENBQUE7UUFDSixDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7Q0FDRjtBQXhERCw4QkF3REMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUENDbWQsIEFyZyB9IGZyb20gJy4vcmVxdWVzdC1oYW5kbGVyJ1xuaW1wb3J0IHsgcmVtb3RlIH0gZnJvbSAnZWxlY3Ryb24nXG5cbmV4cG9ydCB0eXBlIElQQ0NtZFByb21pc2UgPSB7XG4gIFtLIGluIGtleW9mIElQQ0NtZF06IElQQ0NtZFtLXSBleHRlbmRzIChhcmc6IGluZmVyIEEpID0+IGluZmVyIFJcbiAgICA/IChhcmc6IEEpID0+IFByb21pc2U8Uj5cbiAgICA6IG5ldmVyXG59XG5cbmV4cG9ydCBjbGFzcyBJUENDYWxsZXIgaW1wbGVtZW50cyBJUENDbWRQcm9taXNlIHtcbiAgcHJpdmF0ZSBpcGNJZHggPSAwXG4gIHByaXZhdGUgbXlXaW5kb3dJZCA9IHJlbW90ZS5nZXRDdXJyZW50V2luZG93KCkuaWRcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB3aW5kb3dJZDogbnVtYmVyLCBwcml2YXRlIGVkaXRvcklkOiBudW1iZXIpIHt9XG4gIHB1YmxpYyBhc3luYyBzY3JvbGxUb0J1ZmZlclJhbmdlKGFyZzogW251bWJlciwgbnVtYmVyXSkge1xuICAgIHJldHVybiB0aGlzLmlwYygnc2Nyb2xsVG9CdWZmZXJSYW5nZScsIGFyZylcbiAgfVxuICBwdWJsaWMgYXN5bmMgZGVzdHJveSgpIHtcbiAgICByZXR1cm4gdGhpcy5pcGMoJ2Rlc3Ryb3knLCB1bmRlZmluZWQpXG4gIH1cbiAgcHVibGljIGFzeW5jIGluaXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaXBjKCdpbml0JywgdW5kZWZpbmVkKVxuICB9XG4gIHB1YmxpYyBhc3luYyBvcGVuU291cmNlKGFyZz86IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLmlwYygnb3BlblNvdXJjZScsIGFyZylcbiAgfVxuICBwdWJsaWMgZGlzcG9zZSgpIHtcbiAgICAvLyBUT0RPXG4gIH1cbiAgcHJpdmF0ZSBhc3luYyBpcGM8VCBleHRlbmRzIGtleW9mIElQQ0NtZD4oXG4gICAgY21kOiBULFxuICAgIGFyZ3M6IEFyZzxJUENDbWRbVF0+LFxuICApOiBQcm9taXNlPFJldHVyblR5cGU8SVBDQ21kW1RdPj4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZTxhbnk+KChyZXNvbHZlKSA9PiB7XG4gICAgICBjb25zdCBpZHggPSB0aGlzLmlwY0lkeCsrXG4gICAgICBjb25zdCBoYW5kbGVyID0gKGU6IHtcbiAgICAgICAgZWRpdG9ySWQ6IG51bWJlclxuICAgICAgICB3aW5kb3dJZDogbnVtYmVyXG4gICAgICAgIGZvcldpbmRvd0lkOiBudW1iZXJcbiAgICAgICAgaWR4OiBudW1iZXJcbiAgICAgICAgcmVwbHk6IGFueVxuICAgICAgfSkgPT4ge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgZS5mb3JXaW5kb3dJZCA9PT0gdGhpcy5teVdpbmRvd0lkICYmXG4gICAgICAgICAgZS53aW5kb3dJZCA9PT0gdGhpcy53aW5kb3dJZCAmJlxuICAgICAgICAgIGUuZWRpdG9ySWQgPT09IHRoaXMuZWRpdG9ySWQgJiZcbiAgICAgICAgICBlLmlkeCA9PT0gaWR4XG4gICAgICAgICkge1xuICAgICAgICAgIHJlbW90ZS5pcGNNYWluLnJlbW92ZUxpc3RlbmVyKFxuICAgICAgICAgICAgJ21hcmtkb3duLXByZXZpZXctcGx1czplZGl0b3ItcmVwbHknLFxuICAgICAgICAgICAgaGFuZGxlcixcbiAgICAgICAgICApXG4gICAgICAgICAgcmVzb2x2ZShlLnJlcGx5KVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZW1vdGUuaXBjTWFpbi5vbignbWFya2Rvd24tcHJldmlldy1wbHVzOmVkaXRvci1yZXBseScsIGhhbmRsZXIpXG4gICAgICByZW1vdGUuaXBjTWFpbi5lbWl0KCdtYXJrZG93bi1wcmV2aWV3LXBsdXM6ZWRpdG9yLXJlcXVlc3QnLCB7XG4gICAgICAgIHdpbmRvd0lkOiB0aGlzLndpbmRvd0lkLFxuICAgICAgICBlZGl0b3JJZDogdGhpcy5lZGl0b3JJZCxcbiAgICAgICAgZm9yV2luZG93SWQ6IHRoaXMubXlXaW5kb3dJZCxcbiAgICAgICAgaWR4LFxuICAgICAgICBjbWQsXG4gICAgICAgIGFyZ3MsXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbiJdfQ==