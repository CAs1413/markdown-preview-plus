"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class TwoDimArray {
    constructor(row, col) {
        this.row = row;
        this.col = col;
        this._arr = new Array(row * col);
    }
    getInd(row, col) {
        return row * this.col + col;
    }
    get2DInd(ind) {
        return {
            r: (ind / this.col) | 0,
            c: ind % this.col,
        };
    }
    get(row, col) {
        return this._arr[this.getInd(row, col)];
    }
    set(row, col, val) {
        this._arr[row * this.col + col] = val;
    }
    rawGet(ind) {
        return this._arr[ind];
    }
}
exports.TwoDimArray = TwoDimArray;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHdvLWRpbS1hcnJheS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy90d28tZGltLWFycmF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBNEJBO0lBRUUsWUFBNEIsR0FBVyxFQUFrQixHQUFXO1FBQXhDLFFBQUcsR0FBSCxHQUFHLENBQVE7UUFBa0IsUUFBRyxHQUFILEdBQUcsQ0FBUTtRQUNsRSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksS0FBSyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQTtJQUNsQyxDQUFDO0lBRUQsTUFBTSxDQUFDLEdBQVcsRUFBRSxHQUFXO1FBQzdCLE1BQU0sQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUE7SUFDN0IsQ0FBQztJQUVELFFBQVEsQ0FBQyxHQUFXO1FBQ2xCLE1BQU0sQ0FBQztZQUNMLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztZQUN2QixDQUFDLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHO1NBQ2xCLENBQUE7SUFDSCxDQUFDO0lBRUQsR0FBRyxDQUFDLEdBQVcsRUFBRSxHQUFXO1FBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUE7SUFDekMsQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFXLEVBQUUsR0FBVyxFQUFFLEdBQU07UUFDbEMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUE7SUFDdkMsQ0FBQztJQUVELE1BQU0sQ0FBQyxHQUFXO1FBQ2hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQ3ZCLENBQUM7Q0FDRjtBQTVCRCxrQ0E0QkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogZGVjYWZmZWluYXRlIHN1Z2dlc3Rpb25zOlxuICogRFMxMDI6IFJlbW92ZSB1bm5lY2Vzc2FyeSBjb2RlIGNyZWF0ZWQgYmVjYXVzZSBvZiBpbXBsaWNpdCByZXR1cm5zXG4gKiBGdWxsIGRvY3M6IGh0dHBzOi8vZ2l0aHViLmNvbS9kZWNhZmZlaW5hdGUvZGVjYWZmZWluYXRlL2Jsb2IvbWFzdGVyL2RvY3Mvc3VnZ2VzdGlvbnMubWRcbiAqL1xuLy8gVGhpcyBmaWxlIGluY29ycG9yYXRlcyBjb2RlIGZyb20gW21hcmttb25dKGh0dHBzOi8vZ2l0aHViLmNvbS95eWpoYW8vbWFya21vbilcbi8vIGNvdmVyZWQgYnkgdGhlIGZvbGxvd2luZyB0ZXJtczpcbi8vXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTQsIFlhbyBZdWppYW4sIGh0dHA6Ly95anlhby5jb21cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5leHBvcnQgY2xhc3MgVHdvRGltQXJyYXk8VD4ge1xuICBwcml2YXRlIHJlYWRvbmx5IF9hcnI6IFRbXVxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcmVhZG9ubHkgcm93OiBudW1iZXIsIHB1YmxpYyByZWFkb25seSBjb2w6IG51bWJlcikge1xuICAgIHRoaXMuX2FyciA9IG5ldyBBcnJheShyb3cgKiBjb2wpXG4gIH1cblxuICBnZXRJbmQocm93OiBudW1iZXIsIGNvbDogbnVtYmVyKSB7XG4gICAgcmV0dXJuIHJvdyAqIHRoaXMuY29sICsgY29sXG4gIH1cblxuICBnZXQyREluZChpbmQ6IG51bWJlcikge1xuICAgIHJldHVybiB7XG4gICAgICByOiAoaW5kIC8gdGhpcy5jb2wpIHwgMCxcbiAgICAgIGM6IGluZCAlIHRoaXMuY29sLFxuICAgIH1cbiAgfVxuXG4gIGdldChyb3c6IG51bWJlciwgY29sOiBudW1iZXIpIHtcbiAgICByZXR1cm4gdGhpcy5fYXJyW3RoaXMuZ2V0SW5kKHJvdywgY29sKV1cbiAgfVxuXG4gIHNldChyb3c6IG51bWJlciwgY29sOiBudW1iZXIsIHZhbDogVCkge1xuICAgIHRoaXMuX2Fycltyb3cgKiB0aGlzLmNvbCArIGNvbF0gPSB2YWxcbiAgfVxuXG4gIHJhd0dldChpbmQ6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLl9hcnJbaW5kXVxuICB9XG59XG4iXX0=